//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.1-05/30/2003 05:06 AM(java_re)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2003.07.30 at 06:15:01 EDT 
//


package com.perpetual.rp.util.jaxb.impl;

public class VendorCriteriaImpl implements com.perpetual.rp.util.jaxb.VendorCriteria, com.sun.xml.bind.JAXBObject, com.sun.xml.bind.RIElement, com.perpetual.rp.util.jaxb.impl.runtime.UnmarshallableObject, com.perpetual.rp.util.jaxb.impl.runtime.XMLSerializable, com.perpetual.rp.util.jaxb.impl.runtime.ValidatableObject
{

    protected java.lang.String _Type;
    protected com.sun.xml.bind.util.ListImpl _VendorCriterion = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected java.lang.String _Name;
    public final static java.lang.Class version = (com.perpetual.rp.util.jaxb.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    public java.lang.String ____jaxb_ri____getNamespaceURI() {
        return "";
    }

    public java.lang.String ____jaxb_ri____getLocalName() {
        return "VendorCriteria";
    }

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (com.perpetual.rp.util.jaxb.VendorCriteria.class);
    }

    public java.lang.String getType() {
        return _Type;
    }

    public void setType(java.lang.String value) {
        _Type = value;
    }

    public java.util.List getVendorCriterion() {
        return _VendorCriterion;
    }

    public java.lang.String getName() {
        return _Name;
    }

    public void setName(java.lang.String value) {
        _Name = value;
    }

    public com.perpetual.rp.util.jaxb.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.perpetual.rp.util.jaxb.impl.runtime.UnmarshallingContext context) {
        return new com.perpetual.rp.util.jaxb.impl.VendorCriteriaImpl.Unmarshaller(context);
    }

    public void serializeElementBody(com.perpetual.rp.util.jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = _VendorCriterion.size();
        context.startElement("", "VendorCriteria");
        int idx_1 = idx2;
        while (idx_1 != len2) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _VendorCriterion.get(idx_1 ++)));
        }
        context.endNamespaceDecls();
        int idx_3 = idx2;
        context.startAttribute("", "type");
        try {
            context.text(((java.lang.String) _Type));
        } catch (java.lang.Exception e) {
            com.perpetual.rp.util.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        context.startAttribute("", "name");
        try {
            context.text(((java.lang.String) _Name));
        } catch (java.lang.Exception e) {
            com.perpetual.rp.util.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        while (idx_3 != len2) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _VendorCriterion.get(idx_3 ++)));
        }
        context.endAttributes();
        while (idx2 != len2) {
            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _VendorCriterion.get(idx2 ++)));
        }
        context.endElement();
    }

    public void serializeAttributes(com.perpetual.rp.util.jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = _VendorCriterion.size();
    }

    public void serializeAttributeBody(com.perpetual.rp.util.jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = _VendorCriterion.size();
        context.startElement("", "VendorCriteria");
        int idx_1 = idx2;
        while (idx_1 != len2) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _VendorCriterion.get(idx_1 ++)));
        }
        context.endNamespaceDecls();
        int idx_3 = idx2;
        context.startAttribute("", "type");
        try {
            context.text(((java.lang.String) _Type));
        } catch (java.lang.Exception e) {
            com.perpetual.rp.util.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        context.startAttribute("", "name");
        try {
            context.text(((java.lang.String) _Name));
        } catch (java.lang.Exception e) {
            com.perpetual.rp.util.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        while (idx_3 != len2) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _VendorCriterion.get(idx_3 ++)));
        }
        context.endAttributes();
        while (idx2 != len2) {
            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _VendorCriterion.get(idx2 ++)));
        }
        context.endElement();
    }

    public void serializeURIs(com.perpetual.rp.util.jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = _VendorCriterion.size();
    }

    public java.lang.Class getPrimaryInterface() {
        return (com.perpetual.rp.util.jaxb.VendorCriteria.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
+"msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilon"
+"Reducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xp\u0003\u00a1|\u0016p"
+"p\u0000sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~"
+"\u0000\u0004\u0003\u00a1|\u000bppsq\u0000~\u0000\u0007\u0002\u00a9\u00b8\u00b9ppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000~\u0000\u0001xq\u0000~\u0000\u0004\u0001\u00a2\u00c7\u00b1ppsr\u0000\u001bcom.sun.m"
+"sv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/D"
+"atatype;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair"
+";xq\u0000~\u0000\u0004\u0000N(\u001cppsr\u0000-com.sun.msv.datatype.xsd.NormalizedStringTy"
+"pe\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomi"
+"cType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0016L\u0000\nwhi"
+"teSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000"
+" http://www.w3.org/2001/XMLSchemat\u0000\u0010normalizedStringsr\u00004com."
+"sun.msv.datatype.xsd.WhiteSpaceProcessor$Replace\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"r\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp"
+"\u0001sr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000"
+"\tlocalNameq\u0000~\u0000\u0016L\u0000\fnamespaceURIq\u0000~\u0000\u0016xpt\u0000\u0005CDATAt\u0000\u0000sr\u0000#com.sun."
+"msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0016L\u0000\fna"
+"mespaceURIq\u0000~\u0000\u0016xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"pt\u0000\u0004typeq\u0000~\u0000#sq\u0000~\u0000\u000b\u0001\u0006\u00f1\u0003ppq\u0000~\u0000\u0010sq\u0000~\u0000$t\u0000\u0004nameq\u0000~\u0000#sr\u0000\u001dcom.sun."
+"msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\b\u0000\u00f7\u00c3Mppsr\u0000 com.sun.msv."
+"grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.Unary"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0003xq\u0000~\u0000\u0004\u0000\u00f7\u00c3Bsr\u0000\u0011java.lang.Boolean\u00cd r\u0080"
+"\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\u0000\u0000\u00f7\u00c3?q\u0000~\u00001p\u0000sq\u0000~\u0000+\u0000\u00f7\u00c34ppsq\u0000~\u0000-\u0000\u00f7\u00c3)q\u0000"
+"~\u00001psq\u0000~\u0000\u000b\u0000\u00f7\u00c3&q\u0000~\u00001psr\u00002com.sun.msv.grammar.Expression$AnySt"
+"ringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\bsq\u0000~\u00000\u0001q\u0000~\u00007sr\u0000 com.sun.m"
+"sv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000%sr\u00000com.sun.msv.gram"
+"mar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\tq\u0000~\u00008ps"
+"q\u0000~\u0000$t\u0000*com.perpetual.rp.util.jaxb.VendorCriteriont\u0000+http://"
+"java.sun.com/jaxb/xjc/dummy-elementsq\u0000~\u0000<sq\u0000~\u0000$t\u0000\u000eVendorCrit"
+"eriaq\u0000~\u0000#sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;x"
+"psr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000"
+"\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000C[\u0000\u0005tablet\u0000![Lcom/sun/msv/"
+"grammar/Expression;xp\u0000\u0000\u0000\u0006\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expr"
+"ession;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppppppppppppppppq\u0000~\u0000\tppppppp"
+"pppppppppppppppppppppppppppppq\u0000~\u00004ppppppppppq\u0000~\u00003ppppppppppp"
+"ppq\u0000~\u0000/ppppppppppq\u0000~\u0000,pppppppppppppppq\u0000~\u0000\npppppppppppppppppp"
+"ppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.perpetual.rp.util.jaxb.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(com.perpetual.rp.util.jaxb.impl.runtime.UnmarshallingContext context) {
            super(context, "----------");
        }

        protected Unmarshaller(com.perpetual.rp.util.jaxb.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return com.perpetual.rp.util.jaxb.impl.VendorCriteriaImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  7 :
                        if (("VendorCriterion" == ___local)&&("" == ___uri)) {
                            _VendorCriterion.add(((com.perpetual.rp.util.jaxb.impl.VendorCriterionImpl) spawnChildFromEnterElement((com.perpetual.rp.util.jaxb.impl.VendorCriterionImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        state = 8;
                        continue outer;
                    case  9 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  8 :
                        if (("VendorCriterion" == ___local)&&("" == ___uri)) {
                            _VendorCriterion.add(((com.perpetual.rp.util.jaxb.impl.VendorCriterionImpl) spawnChildFromEnterElement((com.perpetual.rp.util.jaxb.impl.VendorCriterionImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        break;
                    case  4 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText0(v);
                            state = 7;
                            continue outer;
                        }
                        break;
                    case  0 :
                        if (("VendorCriteria" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        break;
                    case  1 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 4;
                            continue outer;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText0(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Name = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Type = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  7 :
                        state = 8;
                        continue outer;
                    case  9 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  8 :
                        if (("VendorCriteria" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  4 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText0(v);
                            state = 7;
                            continue outer;
                        }
                        break;
                    case  1 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 4;
                            continue outer;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  7 :
                        state = 8;
                        continue outer;
                    case  9 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  4 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 5;
                            return ;
                        }
                        break;
                    case  1 :
                        if (("type" == ___local)&&("" == ___uri)) {
                            state = 2;
                            return ;
                        }
                        break;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  7 :
                        state = 8;
                        continue outer;
                    case  3 :
                        if (("type" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        break;
                    case  9 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 7;
                            return ;
                        }
                        break;
                    case  4 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText0(v);
                            state = 7;
                            continue outer;
                        }
                        break;
                    case  1 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 4;
                            continue outer;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  5 :
                            eatText0(value);
                            state = 6;
                            return ;
                        case  7 :
                            state = 8;
                            continue outer;
                        case  9 :
                            revertToParentFromText(value);
                            return ;
                        case  4 :
                            attIdx = context.getAttribute("", "name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText0(v);
                                state = 7;
                                continue outer;
                            }
                            break;
                        case  1 :
                            attIdx = context.getAttribute("", "type");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 4;
                                continue outer;
                            }
                            break;
                        case  2 :
                            eatText1(value);
                            state = 3;
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
